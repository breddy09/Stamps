=begin
module Selenium
  module WebDriver
    module Firefox
      class Profile
        class << self
          attr_accessor :webdriver_profile_directory
        end

        def layout_on_disk
          # When a directory is specified, ensure it is not deleted at exit
          if Profile.webdriver_profile_directory
            FileReaper.reap = false
          end

          # Use the specified directory if it already exists (ie assuming an existing profile)
          if Profile.webdriver_profile_directory && Dir.exists?(Profile.webdriver_profile_directory)
            return Profile.webdriver_profile_directory
          end

          # Create the profile directory as usual when it does not exist
          profile_dir = @model ? create_tmp_copy(@model) : Dir.mktmpdir("webdriver-profile")
          FileReaper << profile_dir

          install_extensions(profile_dir)
          delete_lock_files(profile_dir)
          delete_extensions_cache(profile_dir)
          update_user_prefs_in(profile_dir)

          # If a directory is specified, move the created profile to that directory
          if Profile.webdriver_profile_directory
            FileUtils.cp_r(profile_dir, Profile.webdriver_profile_directory)
            profile_dir = Profile.webdriver_profile_directory
          end

          profile_dir
        end
      end # Profile
    end # Firefox
  end # WebDriver
end # Selenium
=end

            # firefox_profile_dir = File.join("C:", "watir-webdriver", "firefox", "test-profile")
            # #Dir.mkdir firefox_profile_dir unless Dir.exist? firefox_profile_dir
            # raise "Firefox profile does not exist in #{firefox_profile_dir}" unless File.exist? firefox_profile_dir
            # Selenium::WebDriver::Firefox::Profile.webdriver_profile_directory = firefox_profile_dir
            # profile = Selenium::WebDriver::Firefox::Profile.new firefox_profile_dir
            # profile.layout_on_disk
            # profile.native_events = false

            profile = Selenium::WebDriver::Firefox::Profile.from_name "selenium"
            #profile = Selenium::WebDriver::Firefox::Profile.new
            #profile['permissions.default.image'] = 2
            profile.layout_on_disk
            browser = Watir::Browser.new(:firefox, :profile => profile)
            browser.goto "cnn.com"